/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject2.frontend;

import com.mycompany.mavenproject2.backend.FriendManagement;
import com.mycompany.mavenproject2.backend.FriendRequestNotification;
import com.mycompany.mavenproject2.backend.GroupAdditionNotification;
import com.mycompany.mavenproject2.backend.GroupPostNotification;
import com.mycompany.mavenproject2.backend.GroupStatusNotification;
import com.mycompany.mavenproject2.backend.NotficationSystem;
import com.mycompany.mavenproject2.backend.Notification;
import com.mycompany.mavenproject2.backend.NotificationFactory;
import java.util.List;

/**
 *
 * @author NEXT STORE
 */
public class NotificationFront extends javax.swing.JFrame {

    /**
     * Creates new form NotificationFront
     */
    private FriendManagement friendManagement;
    private NotficationSystem notificationSystem ;
    public NotificationFront() {
         this.notificationSystem = NotficationSystem.getInstance();
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        loadNotifications();
    }

     private void loadNotifications() {
        // Clear any existing items in the combo box
        NotificationsComboBox.removeAllItems();
        NotificationsComboBox.addItem("Notifications");
        List<Notification> notifications = notificationSystem.getNotifications();
        for (Notification notification : notifications) {
            NotificationsComboBox.addItem(notification.toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        NotificationsComboBox = new javax.swing.JComboBox<>();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NotificationsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Notifications"}));
        NotificationsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotificationsComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NotificationsComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 402, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NotificationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(356, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NotificationsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotificationsComboBoxActionPerformed
        // TODO add your handling code here:
         // Get the selected item (which is a Notification object)
    Object selectedItem = NotificationsComboBox.getSelectedItem();
    
    if (selectedItem instanceof Notification) {
        Notification selectedNotification = (Notification) selectedItem;
        
        // Determine the type of the notification
        
        if (selectedNotification instanceof FriendRequestNotification) {
            FriendrequestWindow friendRequestWindow = new FriendrequestWindow();
            setVisible(false);
            
            
        } else if (selectedNotification instanceof GroupPostNotification) {
            GroupPostWindow groupPostWindow = new GroupPostWindow();
            setVisible(false);
            
        } else if (selectedNotification instanceof GroupStatusNotification) {
            GroupStatusWindow groupStatusWindow = new GroupStatusWindow();
            setVisible(false);
            
        } else if (selectedNotification instanceof GroupAdditionNotification) {
            GroupAdditionWindow groupAdditionWindow = new GroupAdditionWindow();
            setVisible(false);
        }
    }
    }//GEN-LAST:event_NotificationsComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotificationFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotificationFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotificationFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotificationFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotificationFront().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> NotificationsComboBox;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
